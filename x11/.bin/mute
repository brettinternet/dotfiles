#!/bin/bash

NAME=$(basename "$0")

_usage() {
  cat <<- EOF
Usage:  $NAME [options]
        Mute the default PulseAudio source or otherwise every source

Options:
  -h      Display this message
  -d      Apply to default source only
  -y      Mute
  -n      Unmute
          Mute is toggled when -y or -n are not specified

EOF
}

# If matching process is running, kill it to renew our timeout
for PID in $(pidof -x "$NAME"); do
  if [ $PID != $$ ]; then
    # Process is already running, kill group (children too)
    # kill -- -$(ps -o pgid= $PID | grep -o [0-9]*)
    kill -9 $PID
  fi
done

ACTION="toggle"
DEFAULT_ONLY="false"

while getopts ":hdyn" OPT; do
  case $OPT in
    h)
      _usage
      exit 0
      ;;
    y)
      ACTION="1"
      ;;
    d)
      DEFAULT_ONLY="true"
      ;;
    n)
      ACTION="0"
      ;;
    *)
      echo -e "Option does not exist: -$OPTARG"
      _usage
      exit 1
      ;;
  esac
done
shift $((OPTIND - 1))

function pulse_audio_mute { # 1 - mute action (0 or 1)
  if [ $DEFAULT_ONLY = "true" ]; then
    pactl set-source-mute @DEFAULT_SOURCE@ "$ACTION"
  else
    # Source: https://askubuntu.com/a/1152002/664421
    pacmd list-sources | \
      grep -oP 'index: \d+' | \
      awk '{ print $2 }' | \
      xargs -I{} pactl set-source-mute {} "$1"
  fi
}

pulse_audio_mute $ACTION

IS_DEFAULT_SOURCE_MUTED=$(pactl get-source-mute @DEFAULT_SOURCE@)

function notify_unmuted {
  dunstify -a "$NAME" -u 'low' -i "microphone-sensitivity-medium" \
    -h string:x-dunst-stack-tag:"$NAME" \
    "Unmuted"
}

if [[ "$ACTION" = "1" || "$IS_DEFAULT_SOURCE_MUTED" == *"yes" ]]; then
  function revert {
    pulse_audio_mute 0
    notify_unmuted
    kill 0
  }

  trap revert INT

  ACTION=$(
    dunstify -a "$NAME" -u 'critical' -i "microphone-sensitivity-muted" \
      -h string:x-dunst-stack-tag:"$NAME" \
      --action="default,Unmute" \
      "Muted"
  )

  revert
else
  notify_unmuted
fi
